(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{408:function(s,t,a){"use strict";a.r(t);var r=a(26),e=Object(r.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"peerdependencies"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#peerdependencies"}},[s._v("#")]),s._v(" peerDependencies")]),s._v(" "),a("p",[s._v("一般在开发工具包、组件包时会用到。比如组件包依赖 react 17版本，而调用组件包的项目中 react 是16版本，")]),s._v(" "),a("p",[s._v("防止多次引入相同的库")]),s._v(" "),a("h2",{attrs:{id:"nohoist"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nohoist"}},[s._v("#")]),s._v(" nohoist")]),s._v(" "),a("p",[s._v("nohoist 指定一些包不需要 "),a("strong",[s._v("提升安装")]),s._v(" 到项目根目录的 node_modules 下。")]),s._v(" "),a("p",[s._v("在使用 monorepo 时，各个子包的依赖需要区分版本，并不是公用同一个版本，此时需要在子包的 package.json 中指定哪些包不需要提升，安装在子包目录下的 node_modules 中。")]),s._v(" "),a("h3",{attrs:{id:"资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#资料"}},[s._v("#")]),s._v(" 资料")]),s._v(" "),a("ul",[a("li",[s._v("https://classic.yarnpkg.com/blog/2018/02/15/nohoist/")])]),s._v(" "),a("h2",{attrs:{id:"browserslist"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#browserslist"}},[s._v("#")]),s._v(" browserslist")]),s._v(" "),a("h3",{attrs:{id:"是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#是什么"}},[s._v("#")]),s._v(" 是什么")]),s._v(" "),a("p",[s._v("browserslist是package.json包描述文件中的一个配置项，用于配置浏览器类型")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"browserslist"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"> 1%"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 表示包含所有使用率 > 1% 的浏览器")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"last 2 versions"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 表示包含浏览器最新的两个版本")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"not ie <= 8"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 表示不包含 ie8 及以下版本")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])])]),a("h3",{attrs:{id:"为什么会存在"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么会存在"}},[s._v("#")]),s._v(" 为什么会存在")]),s._v(" "),a("p",[s._v("主要作用是用于在不同的前端工具之间共享目标浏览器和 Node.js 的版本")]),s._v(" "),a("p",[s._v("比如像 autoprefixer 这样的插件需要把你写的 css 样式适配不同的浏览器，那么这里要针对哪些浏览器呢，就是上面配置中所包含的。")]),s._v(" "),a("p",[s._v("而如果写在 autoprefixer 的配置中，那么会存在一个问题，万一其他第三方插件也需要浏览器的包含范围用于实现其特定的功能，那么就又得在其配置中设置一遍，这样就无法得以共用。所以在 package.json 中配置 browserslist 的属性使得所有工具都会自动找到目标浏览器。")]),s._v(" "),a("p",[s._v("当然，你也可以单独写在 .browserslistrc 的文件中：")]),s._v(" "),a("p",[s._v("至于它是如何去衡量浏览器的使用率和版本的，数据都是来源于 Can I Use。你也可以访问 browserl.ist/ 去搜索配置项所包含的浏览器列表，比如搜索 last 2 versions 会得到你想要的结果，或者在项目终端运行如下命令查看：")]),s._v(" "),a("h3",{attrs:{id:"有哪些应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有哪些应用场景"}},[s._v("#")]),s._v(" 有哪些应用场景")]),s._v(" "),a("p",[s._v("autoprefixer、babel、postcss")]),s._v(" "),a("h2",{attrs:{id:"resolutions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#resolutions"}},[s._v("#")]),s._v(" resolutions")]),s._v(" "),a("p",[s._v("有时需要固定孙子依赖或者更深层级依赖的版本号会用到 "),a("code",[s._v("resolutions")])]),s._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"resolutions"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"rc-checkbox"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2.3.1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"rc-virtual-list"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1.1.0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"rc-menu"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"8.5.3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"rc-textarea"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0.3.1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"rc-util"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"5.5.0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"rc-tabs"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"11.5.7"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"@ant-design/icons"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"4.5.0"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);