(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{380:function(_,v,t){"use strict";t.r(v);var a=t(26),e=Object(a.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("p",[_._v("计算机运算时只能识别二进制数值，即所有运算中的数字都是有无数个0和1组成的。")]),_._v(" "),t("p",[_._v("0.1+0.2运算之前也是先分别将十进制小数转成二进制后，进行加法运算，将得到的二进制数与十进制小数0.3转成二进制数进行比较。")]),_._v(" "),t("p",[_._v("由于十进制小数0.1和0.2转成二进制后无穷尽，根据双精度浮点数规则，计算机会将其截断，四舍五入，所以相加得到的二进制数会0.3直接转成二进制数大一些。")]),_._v(" "),t("p",[_._v("所以会出现0.1+0.2为什么不等于0.3。")]),_._v(" "),t("h2",{attrs:{id:"核心"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#核心"}},[_._v("#")]),_._v(" 核心")]),_._v(" "),t("p",[_._v("十进制小数如何转化为二进制数值")]),_._v(" "),t("p",[_._v("二级制数值相加规则，满2进1")]),_._v(" "),t("h2",{attrs:{id:"_2进制与10进制之间转换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2进制与10进制之间转换"}},[_._v("#")]),_._v(" 2进制与10进制之间转换")]),_._v(" "),t("p",[_._v("2——>10: parseInt(11, 2)  // 3")]),_._v(" "),t("p",[_._v("10——>2: 10.toString(2)   // '1010'")]),_._v(" "),t("p",[_._v("整数之间的进制转换还是比较简单的，那么小数呢?")]),_._v(" "),t("h2",{attrs:{id:"_0-5转成二进制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_0-5转成二进制"}},[_._v("#")]),_._v(" 0.5转成二进制")]),_._v(" "),t("p",[_._v("0.5 = n"),t("em",[_._v("2^-1 + m")]),_._v("2^-2 + ...")]),_._v(" "),t("p",[_._v("左右两边同时乘2")]),_._v(" "),t("p",[_._v("1 = n"),t("em",[_._v("2^0 + m")]),_._v("2^-1 + ...")]),_._v(" "),t("p",[_._v("由于从2^0开始，才会有整数部分，此时我们就可以看出")]),_._v(" "),t("p",[_._v("1 = n*2^0")]),_._v(" "),t("p",[_._v("n = 1")]),_._v(" "),t("p",[_._v("所以，得到结果：十进制的0.5转换成二进制后为2^-1，那么0.1转换成二进制是什么呢")]),_._v(" "),t("h2",{attrs:{id:"_0-1转换成二进制是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_0-1转换成二进制是什么"}},[_._v("#")]),_._v(" 0.1转换成二进制是什么")]),_._v(" "),t("p",[_._v("0.1 = n"),t("em",[_._v("2^-1 + m")]),_._v("2^-2 + ...")]),_._v(" "),t("p",[_._v("0.2 = n"),t("em",[_._v("2^0 + m")]),_._v("2^-1 + ...   // 由于左边没有整数，所以 n=0, 此时最后结果的首位推导出为0")]),_._v(" "),t("p",[_._v("0.4 = ... + a"),t("em",[_._v("2^0 + b")]),_._v("2^-1 + ...  // 由于左边仍没有整数，所以此时最后结果推导出为00")]),_._v(" "),t("p",[_._v("0.8 = ... + a"),t("em",[_._v("2^0 + b")]),_._v("2^-1 + ...  // 由于左边仍没有整数，所以此时最后结果推导出为000")]),_._v(" "),t("p",[_._v("1.6 = ... + a"),t("em",[_._v("2^0 + b")]),_._v("2^-1 + ...  // 由于左边有整数，所以此时 a = 1, 最后结果推导出为0001")]),_._v(" "),t("p",[_._v("0.6 * 2 = ...+ b"),t("em",[_._v("2^0 + c")]),_._v("2^1 + ...  // 由于左边有整数，所以此时 b = 1, 最后结果推导出为00011")]),_._v(" "),t("p",[_._v("如此推导，得到0.1的二进制表示为：00011001100110011...")]),_._v(" "),t("p",[_._v("由上可以知道，0.1的二进制结果，是无穷尽的小数，计算机内会对最后的结果，在一定的小数位时，四舍五入。")]),_._v(" "),t("p",[_._v("计算机计算0.1的二进制时就已经准确了，那么计算0.2，以及最后相加的结果与0.3相比较，就会出现0.1 + 0.2 != 0.3的情况")]),_._v(" "),t("h2",{attrs:{id:"结论"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#结论"}},[_._v("#")]),_._v(" 结论")]),_._v(" "),t("p",[_._v("0.1+0.2不等于0.3是因为计算机将小数转化为2进制时，由于部分小数无穷尽，进行运算时计算机会四舍五入，无法得到期待结果所对应的2进制表示")])])}),[],!1,null,null,null);v.default=e.exports}}]);